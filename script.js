const quotes = [
    '"O dinheiro Ã© um servo excelente, mas um mestre terrÃ­vel." - Francis Bacon',
    '"Riqueza nÃ£o Ã© sobre ter muito dinheiro, mas sobre ter muitas opÃ§Ãµes." - Chris Rock',
    '"O preÃ§o Ã© o que vocÃª paga. O valor Ã© o que vocÃª recebe." - Warren Buffett',
    '"NÃ£o Ã© o dinheiro que faz vocÃª feliz, Ã© a paz de espÃ­rito." - Dalai Lama',
    '"Dinheiro Ã© apenas uma ferramenta. Te levarÃ¡ aonde quiser, mas nÃ£o te substituirÃ¡ como motorista." - Ayn Rand',
    '"A verdadeira riqueza Ã© ter menos desejos." - Lao TsÃ©',
    '"Invista em vocÃª mesmo. Seu talento Ã© seu capital mais valioso." - Benjamin Franklin',
    '"A maior riqueza Ã© a sabedoria." - SÃ³crates',
    '"Dinheiro nÃ£o compra felicidade, mas a falta dele tambÃ©m nÃ£o." - MillÃ´r Fernandes',
    '"Seja rico em experiÃªncias, nÃ£o em posses." - ConfÃºcio',
    'ğŸ’¡ Guarde 20% do seu salÃ¡rio todo mÃªs, mesmo que seja pouco.',
    'ğŸ’¡ Antes de comprar algo, espere 24 horas para evitar compras por impulso.',
    'ğŸ’¡ Mantenha um fundo de emergÃªncia para 6 meses de despesas.',
    'ğŸ’¡ Anote todos os seus gastos por 30 dias. VocÃª vai se surpreender.',
    'ğŸ’¡ Pague sempre o valor total do cartÃ£o de crÃ©dito, nunca o mÃ­nimo.',
    'ğŸ’¡ Invista em conhecimento, Ã© o Ãºnico investimento que ninguÃ©m pode tirar de vocÃª.',
    'ğŸ’¡ Compare preÃ§os antes de comprar, inclusive em lojas online.',
    'ğŸ’¡ Evite dÃ­vidas para comprar coisas que se depreciam.',
    'ğŸ’¡ Automatize suas economias com transferÃªncias automÃ¡ticas.',
    'ğŸ’¡ Aprenda sobre investimentos antes de investir.',
    'ğŸ’¡ Use a regra 50/30/20: 50% necessidades, 30% desejos, 20% poupanÃ§a.',
    'ğŸ’¡ Cancele assinaturas que vocÃª nÃ£o usa frequentemente.',
    'ğŸ’¡ FaÃ§a manutenÃ§Ã£o preventiva de seus bens para evitar gastos maiores.',
    'ğŸ’¡ Pesquise preÃ§os de seguro anualmente para encontrar melhores ofertas.',
    'ğŸ’¡ Crie mÃºltiplas fontes de renda.'
];
function displayRandomQuote() {
    const quoteElement = document.getElementById('random-quote');
    const randomIndex = Math.floor(Math.random() * quotes.length);
    quoteElement.textContent = quotes[randomIndex];
}
window.addEventListener('load', displayRandomQuote);
class Calculator {
    constructor() {
        this.previousOperand = '';
        this.currentOperand = '0';
        this.operation = undefined;
    }
    clear() {
        this.previousOperand = '';
        this.currentOperand = '0';
        this.operation = undefined;
    }
    delete() {
        if (this.currentOperand === '0') return;
        if (this.currentOperand.length === 1) {
            this.currentOperand = '0';
        } else {
            this.currentOperand = this.currentOperand.slice(0, -1);
        }
    }
    appendNumber(number) {
        if (number === '.' && this.currentOperand.includes('.')) return;
        if (this.currentOperand === '0' && number !== '.') {
            this.currentOperand = number;
        } else {
            this.currentOperand = this.currentOperand.toString() + number;
        }
    }
    chooseOperation(operation) {
        if (this.currentOperand === '') return;
        if (this.previousOperand !== '') {
            this.compute();
        }
        this.operation = operation;
        this.previousOperand = this.currentOperand;
        this.currentOperand = '0';
    }
    compute() {
        let computation;
        const prev = parseFloat(this.previousOperand);
        const current = parseFloat(this.currentOperand);
        if (isNaN(prev) || isNaN(current)) return;

        switch (this.operation) {
            case '+':
                computation = prev + current;
                break;
            case '-':
                computation = prev - current;
                break;
            case 'Ã—':
                computation = prev * current;
                break;
            case 'Ã·':
                if (current === 0) {
                    alert('NÃ£o Ã© possÃ­vel dividir por zero!');
                    return;
                }
                computation = prev / current;
                break;
            default:
                return;
        }
        this.currentOperand = computation.toString();
        this.operation = undefined;
        this.previousOperand = '';
    }
    updateDisplay() {
        document.querySelector('.current-operand').textContent = this.currentOperand;
        if (this.operation != null) {
            document.querySelector('.previous-operand').textContent =
                `${this.previousOperand} ${this.operation}`;
        } else {
            document.querySelector('.previous-operand').textContent = '';
        }
    }
}
const calculator = new Calculator();
document.querySelectorAll('.number').forEach(button => {
    button.addEventListener('click', () => {
        calculator.appendNumber(button.innerText);
        calculator.updateDisplay();
    });
});
document.querySelectorAll('.operator').forEach(button => {
    button.addEventListener('click', () => {
        calculator.chooseOperation(button.innerText);
        calculator.updateDisplay();
    });
});
document.querySelector('[data-action="calculate"]').addEventListener('click', () => {
    calculator.compute();
    calculator.updateDisplay();
});
document.querySelector('[data-action="clear"]').addEventListener('click', () => {
    calculator.clear();
    calculator.updateDisplay();
});
document.querySelector('[data-action="delete"]').addEventListener('click', () => {
    calculator.delete();
    calculator.updateDisplay();
});
document.addEventListener('keydown', event => {
    if (event.key >= '0' && event.key <= '9' || event.key === '.') {
        calculator.appendNumber(event.key);
        calculator.updateDisplay();
    }
    if (event.key === '+' || event.key === '-' || event.key === '*' || event.key === '/') {
        const operatorMap = {
            '*': 'Ã—',
            '/': 'Ã·'
        };
        calculator.chooseOperation(operatorMap[event.key] || event.key);
        calculator.updateDisplay();
    }
    if (event.key === 'Enter' || event.key === '=') {
        calculator.compute();
        calculator.updateDisplay();
    }
    if (event.key === 'Backspace') {
        calculator.delete();
        calculator.updateDisplay();
    }
    if (event.key === 'Escape') {
        calculator.clear();
        calculator.updateDisplay();
    }
}); 